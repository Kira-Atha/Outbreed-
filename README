Outbreed – Development Roadmap
------------------------------

Phase 1 – Core Gameplay Prototype
[X] Implement a player character with eight-directional movement
[X] Restrict player movement within the playable area (basic collision system)
[X] Create a simple environment (ground + walls)
[X] Ensure the camera smoothly follows the player
[X] Enable controller support
[X] Integrate looping background music (BGM)
[X] Set up the initial Audio Mixer (Music/SFX → Audio Manager)

---

Phase 2 – Basic Interactions
[X] Add at least one interactable object (test square)
[X] Provide simple visual feedback on interaction (swap red <-> blue squares)
[X] Prevent interaction when the player is out of range
[X] Display text feedback on interaction

---

Phase 3 – Beta UI
[X] Implement a basic dialogue UI
[X] Create a start menu
[X] Add a navigable menu system (Stats, Bag, Equip, Save, Settings, Quit)
[X] Wire up start-menu buttons to event handlers
[X] Design first stats panel (open/close)
[X] Design first bag panel (open/close)
[X] Design first equip panel (open/close)
[X] Design first save panel (open/close + buttons group)
[X] Design first settings panel (open/close)
[X] Design first quit panel (popup validation => save ? save : quit game)
[X] Change cursor focus panel menu -> save || quit
[X] Design HP bar
[X] Responsive HP bar

---
Phase 4 – Asset Pipeline Automation

[X] Standardize sprite import settings automatically (consistent visual style)
[X] Automatically slice sprites into grids (e.g., 3×3 for tiles)
[X] Automatically generate ready-to-use tile palettes (Ground, Wall, Water, etc.)
[X] Automatically configure props and icons as single sprites

---
Phase 5 – Creature System (Foundations)
[ ] Define placeholders for creatures (Outlings) appearing in the world
[ ] Allow the player to collect/recruit a creature
[ ] Display the player’s current creatures in a simple UI list

Phase 6 – Reusability & Optimization
[ ] Replace direct GameObjects with Prefabs for better reusability and scalability
